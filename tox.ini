[tox]
min_version = 4.0
requires =
    tox-pypi-filter>=0.14
envlist =
    py{310,311,312,313}{,-online}
    py313-devdeps
    py310-oldestdeps
    codestyle
    build_docs

[testenv]
pypi_filter = https://raw.githubusercontent.com/sunpy/sunpy/main/.test_package_pins.txt
allowlist_externals =
    /bin/sh
    minimum_dependencies
# Run the tests in a temporary directory to make sure that we don't import
# the package from the source tree
change_dir = .tmp/{envname}
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    online: that require remote data (as well as the offline ones)
pass_env =
    # A variable to tell tests we are on a CI system
    CI
    # Custom compiler locations (such as ccache)
    CC
    # Location of locales (needed by sphinx on some systems)
    LOCALE_ARCHIVE
    # If the user has set a LC override we should follow it
    LC_ALL
setenv =
    MPLBACKEND = agg
    SUNPY_SAMPLEDIR = {env:SUNPY_SAMPLEDIR:{toxinidir}/.tox/sample_data/}
    devdeps,build_docs,online: HOME = {envtmpdir}
    PARFIVE_HIDE_PROGRESS = True
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/astropy/simple https://pypi.anaconda.org/scientific-python-nightly-wheels/simple https://pypi.anaconda.org/liberfa/simple
deps =
    devdeps: git+https://github.com/sunpy/sunpy
    # Handle minimum dependencies via minimum_dependencies
    oldestdeps: minimum_dependencies
    online: pytest-rerunfailures
extras =
    all
    tests
commands_pre =
    oldestdeps: minimum_dependencies sunkit_instruments --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt
    pip freeze --all --no-input
commands =
    # To amend the pytest command for different factors you can add a line
    # which starts with a factor like `online: --remote-data=any \`
    # If you have no factors which require different commands this is all you need:
    pytest \
    -vvv \
    -r fEs \
    --pyargs sunkit_instruments \
    --cov-report=xml \
    --cov=sunkit_instruments \
    --cov-config={toxinidir}/.coveragerc \
    {toxinidir}/docs \
    online: --remote-data=any \
    online: --reruns 2 --reruns-delay 15 \
    {posargs}

[testenv:codestyle]
pypi_filter =
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --color always --all-files --show-diff-on-failure

[testenv:build_docs]
usedevelop = true
change_dir = docs
description = Invoke sphinx-build to build the HTML docs
extras =
    all
    docs
commands =
    sphinx-build -j auto --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}
    python -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "_build" / "index.html"))'
